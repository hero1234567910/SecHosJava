<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.basic.javaframe.dao.HosOrderDao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.basic.javaframe.entity.HosOrder" id="hosOrderMap">
        <result property="rowId" column="row_id"/>
        <result property="rowGuid" column="row_guid"/>
        <result property="createTime" column="create_time"/>
        <result property="delFlag" column="del_flag"/>
        <result property="sortSq" column="sort_sq"/>
        <result property="orderNumber" column="order_number"/>
        <result property="orderUserGuid" column="order_userGuid"/>
        <result property="consigneeName" column="consignee_name"/>
        <result property="consigneeInpatient" column="consignee_Inpatient"/>
        <result property="consigneeStorey" column="consignee_storey"/>
        <result property="consigneeBedNumber" column="consignee_bedNumber"/>
        <result property="consigneeMobile" column="consignee_mobile"/>
        <result property="orderStatus" column="order_status"/>
        <result property="remark" column="remark"/>
        <result property="reserveTime" column="reserveTime"/>
        <result property="reserveTimeSuffix" column="reserveTimeSuffix"/>
        <result property="orderMoney" column="order_money"/>
        <result property="merchantNumber" column="merchant_number"/>
        <result property="payTime" column="pay_time"/>
        <!--  autoMapping="true" -->
         <collection property="hosOrderitems" ofType="com.basic.javaframe.entity.HosOrderitem">
            <id column="orderItemRowId" property="rowId"/>
            <result property="rowGuid" column="row_guid"/>
            <result property="goodsGuid" column="goods_guid"/>
            <result property="count" column="count"/>
            <result property="totalMoney" column="total_money"/>    
            <result property="orderGuid" column="order_guid"/>    
            <result property="itemPrice" column="item_price"/>    
             <association property="hosGoods" javaType="com.basic.javaframe.entity.HosGoods">
		        <!-- id:声明主键，表示user_id是关联查询对象的唯一标识-->
		        <id column="goodsId" property="rowId"/>
		        <result property="rowGuid" column="row_guid"/>
		        <result property="goodsName" column="goods_name"/>
		        <result property="goodsTypeGuid" column="goods_type_guid"/>
		        <result property="goodsPrice" column="goods_price"/>
		        <result property="goodsImgGuid" column="goods_img_guid"/>
		        <result property="goodsInfo" column="goods_info"/>
		        <result property="isShelf" column="is_shelf"/>
		        <result property="goodsUrl" column="content_url"/>
		    </association>
         </collection> 
    </resultMap>

    <select id="getList" resultType="com.basic.javaframe.entity.HosOrder">
        select * from hos_order t
        <include refid="where_clause"/>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by row_id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="getCount" resultType="int">
        select count(*) from hos_order t
        <include refid="where_clause"/>
    </select>
	
    <!-- 根据rowGuid查询 -->
    <select id="getByRowGuid" resultType="com.basic.javaframe.entity.HosOrder">
        select * from hos_order where row_guid = #{rowGuid}
    </select>
    
    <!-- 根据商户订单号查询 -->
    <select id="queryByOrderNumber" resultMap="hosOrderMap">
 	    <!-- select * from hos_order where merchant_number = #{orderNumber} -->
 	    select o.*,m.row_id as orderItemRowId,m.row_guid,m.goods_guid,
        m.count,m.total_money,m.order_guid,m.item_price,g.row_id as goodsId,g.row_guid,g.goods_name,
        g.goods_type_guid,g.goods_price,g.goods_img_guid,g.goods_info,g.is_shelf,f.content_url
         from hos_order o 
        left join hos_orderitem m on o.row_guid = m.order_guid
        left join hos_goods g on m.goods_guid = g.row_guid 
        left join frame_attach f on g.goods_img_guid = f.form_rowGuid
        where o.merchant_number = #{orderNumber}
 	</select>

    <!-- 搜索数据区域 -->
    <sql id="where_clause">
        <where>
            1=1
            <if test="rowId != null and rowId != ''">and t.row_id = #{rowId}</if>
            <if test="rowIdVague != null and rowIdVague != ''">and t.row_id like concat('%',#{rowIdVague},'%')</if>
            <if test="rowGuid != null and rowGuid != ''">and t.row_guid = #{rowGuid}</if>
            <if test="rowGuidVague != null and rowGuidVague != ''">and t.row_guid like concat('%',#{rowGuidVague},'%')
            </if>
            <if test="createTime != null and createTime != ''">and t.create_time = #{createTime}</if>
            <if test="createTimeVague != null and createTimeVague != ''">and t.create_time like
                concat('%',#{createTimeVague},'%')
            </if>
            <if test="delFlag != null and delFlag != ''">and t.del_flag = #{delFlag}</if>
            <if test="delFlagVague != null and delFlagVague != ''">and t.del_flag like concat('%',#{delFlagVague},'%')
            </if>
            <if test="sortSq != null and sortSq != ''">and t.sort_sq = #{sortSq}</if>
            <if test="sortSqVague != null and sortSqVague != ''">and t.sort_sq like concat('%',#{sortSqVague},'%')</if>
            <if test="orderNumber != null and orderNumber != ''">and t.order_number = #{orderNumber}</if>
            <if test="orderNumberVague != null and orderNumberVague != ''">and t.order_number like
                concat('%',#{orderNumberVague},'%')
            </if>
            <if test="orderUserGuid != null and orderUserGuid != ''">and t.order_userGuid = #{orderUserGuid}</if>
            <if test="orderUserGuidVague != null and orderUserGuidVague != ''">and t.order_userGuid like
                concat('%',#{orderUserGuidVague},'%')
            </if>
            <if test="consigneeName != null and consigneeName != ''">and t.consignee_name = #{consigneeName}</if>
            <if test="consigneeNameVague != null and consigneeNameVague != ''">and t.consignee_name like
                concat('%',#{consigneeNameVague},'%')
            </if>
            <if test="consigneeInpatient != null and consigneeInpatient != ''">and t.consignee_Inpatient =
                #{consigneeInpatient}
            </if>
            <if test="consigneeInpatientVague != null and consigneeInpatientVague != ''">and t.consignee_Inpatient like
                concat('%',#{consigneeInpatientVague},'%')
            </if>
            <if test="consigneeStorey != null and consigneeStorey != ''">and t.consignee_storey = #{consigneeStorey}
            </if>
            <if test="consigneeStoreyVague != null and consigneeStoreyVague != ''">and t.consignee_storey like
                concat('%',#{consigneeStoreyVague},'%')
            </if>
            <if test="consigneeBedNumber != null and consigneeBedNumber != ''">and t.consignee_bedNumber =
                #{consigneeBedNumber}
            </if>
            <if test="consigneeBedNumberVague != null and consigneeBedNumberVague != ''">and t.consignee_bedNumber like
                concat('%',#{consigneeBedNumberVague},'%')
            </if>
            <if test="consigneeMobile != null and consigneeMobile != ''">and t.consignee_mobile = #{consigneeMobile}
            </if>
            <if test="consigneeMobileVague != null and consigneeMobileVague != ''">and t.consignee_mobile like
                concat('%',#{consigneeMobileVague},'%')
            </if>
            <if test="orderStatus != null and orderStatus != ''">and t.order_status = #{orderStatus}</if>
            <if test="orderStatusVague != null and orderStatusVague != ''">and t.order_status like
                concat('%',#{orderStatusVague},'%')
            </if>
            <if test="remark != null and remark != ''">and t.remark = #{remark}</if>
            <if test="remarkVague != null and remarkVague != ''">and t.remark like concat('%',#{remarkVague},'%')</if>
            <if test="reserveTime != null and reserveTime != ''">and t.reserveTime = #{reserveTime}</if>
            <if test="reserveTimeVague != null and reserveTimeVague != ''">and t.reserveTime like
                concat('%',#{reserveTimeVague},'%')
            </if>
            <if test="reserveTimeSuffix != null and reserveTimeSuffix != ''">and t.reserveTimeSuffix =
                #{reserveTimeSuffix}
            </if>
            <if test="reserveTimeSuffixVague != null and reserveTimeSuffixVague != ''">and t.reserveTimeSuffix like
                concat('%',#{reserveTimeSuffixVague},'%')
            </if>
            <if test="orderMoney != null and orderMoney != ''">and t.order_money = #{orderMoney}</if>
            <if test="orderMoneyVague != null and orderMoneyVague != ''">and t.order_money like
                concat('%',#{orderMoneyVague},'%')
            </if>
            <if test="merchantNumber != null and merchantNumber != ''">and t.merchant_number = #{merchantNumber}</if>
            <if test="merchantNumberVague != null and merchantNumberVague != ''">and t.merchant_number like
                concat('%',#{merchantNumberVague},'%')
            </if>
            <if test="payTime != null and payTime != ''">and t.pay_time = #{payTime}</if>
            <if test="payTimeVague != null and payTimeVague != ''">and t.pay_time like concat('%',#{payTimeVague},'%')
            </if>
            and t.del_flag =0
        </where>
    </sql>

    <insert id="save" parameterType="com.basic.javaframe.entity.HosOrder" useGeneratedKeys="true" keyProperty="rowId">
		insert into hos_order
		(
			`row_guid`, 
			`create_time`, 
			`del_flag`, 
			`sort_sq`, 
			`order_number`, 
			`order_userGuid`,
			`consignee_name`, 
			`consignee_Inpatient`, 
			`consignee_storey`, 
			`consignee_bedNumber`, 
			`consignee_mobile`, 
			`order_status`, 
			`remark`, 
			`reserveTime`, 
			`reserveTimeSuffix`, 
			`order_money`, 
			`merchant_number`,
			`pay_time`
		)
		values
		(
			#{rowGuid}, 
			#{createTime}, 
			#{delFlag}, 
			#{sortSq}, 
			#{orderNumber}, 
			#{orderUserGuid},
			#{consigneeName}, 
			#{consigneeInpatient}, 
			#{consigneeStorey}, 
			#{consigneeBedNumber}, 
			#{consigneeMobile}, 
			#{orderStatus}, 
			#{remark}, 
			#{reserveTime}, 
			#{reserveTimeSuffix}, 
			#{orderMoney}, 
			#{merchantNumber},
			#{payTime}
		)
	</insert>

    <update id="update" parameterType="com.basic.javaframe.entity.HosOrder">
        update hos_order
        <set>
            <if test="rowGuid != null">`row_guid` = #{rowGuid},</if>
            <if test="createTime != null">`create_time` = #{createTime},</if>
            <if test="delFlag != null">`del_flag` = #{delFlag},</if>
            <if test="sortSq != null">`sort_sq` = #{sortSq},</if>
            <if test="orderNumber != null">`order_number` = #{orderNumber},</if>
            <if test="orderUserGuid != null">`order_userGuid` = #{orderUserGuid},</if>
            <if test="consigneeName != null">`consignee_name` = #{consigneeName},</if>
            <if test="consigneeInpatient != null">`consignee_Inpatient` = #{consigneeInpatient},</if>
            <if test="consigneeStorey != null">`consignee_storey` = #{consigneeStorey},</if>
            <if test="consigneeBedNumber != null">`consignee_bedNumber` = #{consigneeBedNumber},</if>
            <if test="consigneeMobile != null">`consignee_mobile` = #{consigneeMobile},</if>
            <if test="orderStatus != null">`order_status` = #{orderStatus},</if>
            <if test="remark != null">`remark` = #{remark},</if>
            <if test="reserveTime != null">`reserveTime` = #{reserveTime},</if>
            <if test="reserveTimeSuffix != null">`reserveTimeSuffix` = #{reserveTimeSuffix},</if>
            <if test="orderMoney != null">`order_money` = #{orderMoney},</if>
            <if test="merchantNumber != null">`merchant_number` = #{merchantNumber},</if>
            <if test="payTime != null">`pay_time` = #{payTime}</if>
        </set>
        where row_guid = #{rowGuid}
    </update>

    <delete id="deleteBatch">
        update hos_order set `del_flag` = 1 where row_guid in
        <foreach item="rowGuid" collection="array" open="(" separator="," close=")">
            #{rowGuid}
        </foreach>
    </delete>
	
   <!--  批量更新订单状态为已完成 -->
    <update id="updateOrderStatus">
        update hos_order set `order_status` = 4 where row_guid in 
        <foreach collection="rowGuids" item="rowGuid" open="(" separator="," close=")">
            #{rowGuid}
        </foreach>
    </update>
    
    <!--根据商户订单号查询-->
    <select id="getOrderByMerchantNumber" resultType="com.basic.javaframe.entity.HosOrder">
		select * from hos_order where merchant_number=#{merchantNumber} and del_flag = 0
	</select>

    <!--查询所有为已支付的订单信息-->
    <select id="getOrderByStatus1" resultType="com.basic.javaframe.entity.HosOrder">
        select * from hos_order where order_status = 1 and del_flag = 0
    </select>

    <!--根据用户Guid查询订单-->
    <select id="getOrderListByUserGuid" resultMap="hosOrderMap">
        select o.*,m.row_id as orderItemRowId,m.row_guid,m.goods_guid,
        m.count,m.total_money,m.order_guid,m.item_price,g.row_id as goodsId,g.row_guid,g.goods_name,
        g.goods_type_guid,g.goods_price,g.goods_img_guid,g.goods_info,g.is_shelf,f.content_url
         from hos_order o 
        left join hos_orderitem m on o.row_guid = m.order_guid
        left join hos_goods g on m.goods_guid = g.row_guid 
        left join frame_attach f on g.goods_img_guid = f.form_rowGuid
        where o.order_userGuid=#{orderUserGuid} and o.del_flag = 0 order by o.reserveTime desc
    </select>

    <!--根据订单Guid查询订单的详细信息-->
    <select id="getOrderDetailByGuid" resultMap="hosOrderMap">
        select o.* ,m.row_id as orderItemRowId,m.row_guid,m.goods_guid,
        m.count,m.total_money,m.order_guid,m.item_price,g.row_id as goodsId,g.row_guid,g.goods_name,
        g.goods_type_guid,g.goods_price,g.goods_img_guid,g.goods_info,g.is_shelf,f.content_url
        from hos_order o
        left join hos_orderitem m on o.row_guid = m.order_guid
        left join hos_goods g on m.goods_guid = g.row_guid
        left join frame_attach f on g.goods_img_guid = f.form_rowGuid
        where o.row_guid =#{rowGuid} and o.del_flag =0
    </select>

    <!--根据用户Guid查询订单商品标识-->
    <select id="getOrderItemByUserGuid" resultType="java.lang.String">
        select order_itemGuid from hos_order where order_userGuid=#{orderUserGuid} and del_flag = 0
    </select>
    
    <!-- 查询所有订单 -->
    <select id="selectAllOrder" resultType="com.basic.javaframe.entity.HosOrder">
        select order_status from  hos_order
    </select>
    
    <select id="selectOrderStatisical" resultType="map">
       SELECT HOUR(e.create_time)as Hour,FLOOR(MINUTE(e.create_time)/30) as M, COUNT(*) as Count 
		FROM hos_order e 
		WHERE e.create_time BETWEEN (select DATE_SUB(curdate(),INTERVAL 1 DAY)) AND curdate()
		GROUP BY FLOOR(MINUTE(e.create_time)/30),HOUR(e.create_time) 
		ORDER BY Hour(e.create_time);
    </select>

</mapper>