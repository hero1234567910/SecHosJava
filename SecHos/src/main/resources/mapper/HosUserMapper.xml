<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.basic.javaframe.dao.HosUserDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.basic.javaframe.entity.HosUser" id="hosUserMap">
        <result property="rowId" column="row_id"/>
        <result property="rowGuid" column="row_guid"/>
        <result property="createTime" column="create_time"/>
        <result property="delFlag" column="del_flag"/>
        <result property="sortSq" column="sort_sq"/>
        <result property="hosUserName" column="hos_userName"/>
        <result property="openid" column="openid"/>
        <result property="hosUserMobile" column="hos_userMobile"/>
        <result property="addressGuid" column="address_guid"/>
		<result property="hosHeadImgUrl" column="hos_headimgUrl"/>
    </resultMap>

	<select id="getList" resultType="com.basic.javaframe.entity.HosUser">
		select * from hos_user t <include refid="where_clause" />
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by sort_sq desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="getCount" resultType="int">
		select count(*) from hos_user t  <include refid="where_clause" />
	</select>
	
 	<select id="getUserByGuid" resultType="com.basic.javaframe.entity.HosUser">
 	    select * from hos_user where row_guid = #{userGuid}
 	</select>
 	
	<!--通过openid查询用户-->
	<select id="getUserByOpenid" resultType="com.basic.javaframe.entity.HosUser">
		select * from hos_user t where t.openid=#{openid} and t.del_flag = 0
	</select>

    <!-- 搜索数据区域 -->
    <sql id="where_clause">
        <where>
            1=1
            <if test="rowId != null and rowId != ''"> and t.row_id = #{rowId} </if>
    		<if test="rowIdVague != null and rowIdVague != ''"> and t.row_id like concat('%',#{rowIdVague},'%') </if>
            <if test="rowGuid != null and rowGuid != ''"> and t.row_guid = #{rowGuid} </if>
    		<if test="rowGuidVague != null and rowGuidVague != ''"> and t.row_guid like concat('%',#{rowGuidVague},'%') </if>
            <if test="createTime != null and createTime != ''"> and t.create_time = #{createTime} </if>
    		<if test="createTimeVague != null and createTimeVague != ''"> and t.create_time like concat('%',#{createTimeVague},'%') </if>
            <if test="delFlag != null and delFlag != ''"> and t.del_flag = #{delFlag} </if>
    		<if test="delFlagVague != null and delFlagVague != ''"> and t.del_flag like concat('%',#{delFlagVague},'%') </if>
            <if test="sortSq != null and sortSq != ''"> and t.sort_sq = #{sortSq} </if>
    		<if test="sortSqVague != null and sortSqVague != ''"> and t.sort_sq like concat('%',#{sortSqVague},'%') </if>
            <if test="hosUserName != null and hosUserName != ''"> and t.hos_userName = #{hosUserName} </if>
    		<if test="hosUserNameVague != null and hosUserNameVague != ''"> and t.hos_userName like concat('%',#{hosUserNameVague},'%') </if>
            <if test="openid != null and openid != ''"> and t.openid = #{openid} </if>
    		<if test="openidVague != null and openidVague != ''"> and t.openid like concat('%',#{openidVague},'%') </if>
            <if test="hosUserMobile != null and hosUserMobile != ''"> and t.hos_userMobile = #{hosUserMobile} </if>
    		<if test="hosUserMobileVague != null and hosUserMobileVague != ''"> and t.hos_userMobile like concat('%',#{hosUserMobileVague},'%') </if>
			<if test="addressGuid != null and addressGuid != ''"> and t.address_guid = #{addressGuid} </if>
			<if test="addressGuidVague != null and addressGuidVague != ''"> and t.address_guid like concat('%',#{addressGuidVague},'%') </if>
			and t.del_flag =0
        </where>
    </sql>
	 
	<insert id="save" parameterType="com.basic.javaframe.entity.HosUser" useGeneratedKeys="true" keyProperty="rowId">
		insert into hos_user
		(
			`row_guid`, 
			`create_time`, 
			`del_flag`, 
			`sort_sq`, 
			`hos_userName`, 
			`openid`, 
			`hos_userMobile`,
			`address_guid`
		)
		values
		(
			#{rowGuid}, 
			#{createTime}, 
			#{delFlag}, 
			#{sortSq}, 
			#{hosUserName}, 
			#{openid}, 
			#{hosUserMobile},
			#{addressGuid}
		)
	</insert>
	 
	<update id="update" parameterType="com.basic.javaframe.entity.HosUser">
		update hos_user 
		<set>
			<if test="rowGuid != null">`row_guid` = #{rowGuid}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="delFlag != null">`del_flag` = #{delFlag}, </if>
			<if test="sortSq != null">`sort_sq` = #{sortSq}, </if>
			<if test="hosUserName != null">`hos_userName` = #{hosUserName}, </if>
			<if test="openid != null">`openid` = #{openid}, </if>
			<if test="hosUserMobile != null">`hos_userMobile` = #{hosUserMobile}, </if>
			<if test="addressGuid != null">`address_guid` = #{addressGuid}, </if>
		</set>
		where row_guid = #{rowGuid}
	</update>
	
	<delete id="deleteBatch">
		update hos_user set `del_flag` = 1 where row_guid in 
		<foreach item="rowGuid" collection="array" open="(" separator="," close=")">
			#{rowGuid}
		</foreach>
	</delete>

</mapper>